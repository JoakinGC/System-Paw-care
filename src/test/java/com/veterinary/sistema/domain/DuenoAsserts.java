package com.veterinary.sistema.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DuenoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDuenoAllPropertiesEquals(Dueno expected, Dueno actual) {
        assertDuenoAutoGeneratedPropertiesEquals(expected, actual);
        assertDuenoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDuenoAllUpdatablePropertiesEquals(Dueno expected, Dueno actual) {
        assertDuenoUpdatableFieldsEquals(expected, actual);
        assertDuenoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDuenoAutoGeneratedPropertiesEquals(Dueno expected, Dueno actual) {
        assertThat(expected)
            .as("Verify Dueno auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDuenoUpdatableFieldsEquals(Dueno expected, Dueno actual) {
        assertThat(expected)
            .as("Verify Dueno relevant properties")
            .satisfies(e -> assertThat(e.getNombre()).as("check nombre").isEqualTo(actual.getNombre()))
            .satisfies(e -> assertThat(e.getApellido()).as("check apellido").isEqualTo(actual.getApellido()))
            .satisfies(e -> assertThat(e.getDireccion()).as("check direccion").isEqualTo(actual.getDireccion()))
            .satisfies(e -> assertThat(e.getTelefono()).as("check telefono").isEqualTo(actual.getTelefono()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDuenoUpdatableRelationshipsEquals(Dueno expected, Dueno actual) {}
}
