package com.veterinary.sistema.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EstudiosAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEstudiosAllPropertiesEquals(Estudios expected, Estudios actual) {
        assertEstudiosAutoGeneratedPropertiesEquals(expected, actual);
        assertEstudiosAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEstudiosAllUpdatablePropertiesEquals(Estudios expected, Estudios actual) {
        assertEstudiosUpdatableFieldsEquals(expected, actual);
        assertEstudiosUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEstudiosAutoGeneratedPropertiesEquals(Estudios expected, Estudios actual) {
        assertThat(expected)
            .as("Verify Estudios auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEstudiosUpdatableFieldsEquals(Estudios expected, Estudios actual) {
        assertThat(expected)
            .as("Verify Estudios relevant properties")
            .satisfies(e -> assertThat(e.getNombre()).as("check nombre").isEqualTo(actual.getNombre()))
            .satisfies(e -> assertThat(e.getFechaCursado()).as("check fechaCursado").isEqualTo(actual.getFechaCursado()))
            .satisfies(e -> assertThat(e.getNombreInsituto()).as("check nombreInsituto").isEqualTo(actual.getNombreInsituto()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEstudiosUpdatableRelationshipsEquals(Estudios expected, Estudios actual) {
        assertThat(expected)
            .as("Verify Estudios relationships")
            .satisfies(e -> assertThat(e.getVeterinarios()).as("check veterinarios").isEqualTo(actual.getVeterinarios()));
    }
}
