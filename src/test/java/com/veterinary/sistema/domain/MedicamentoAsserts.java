package com.veterinary.sistema.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MedicamentoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicamentoAllPropertiesEquals(Medicamento expected, Medicamento actual) {
        assertMedicamentoAutoGeneratedPropertiesEquals(expected, actual);
        assertMedicamentoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicamentoAllUpdatablePropertiesEquals(Medicamento expected, Medicamento actual) {
        assertMedicamentoUpdatableFieldsEquals(expected, actual);
        assertMedicamentoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicamentoAutoGeneratedPropertiesEquals(Medicamento expected, Medicamento actual) {
        assertThat(expected)
            .as("Verify Medicamento auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicamentoUpdatableFieldsEquals(Medicamento expected, Medicamento actual) {
        assertThat(expected)
            .as("Verify Medicamento relevant properties")
            .satisfies(e -> assertThat(e.getNombre()).as("check nombre").isEqualTo(actual.getNombre()))
            .satisfies(e -> assertThat(e.getDescripcion()).as("check descripcion").isEqualTo(actual.getDescripcion()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicamentoUpdatableRelationshipsEquals(Medicamento expected, Medicamento actual) {
        assertThat(expected)
            .as("Verify Medicamento relationships")
            .satisfies(e -> assertThat(e.getHistorials()).as("check historials").isEqualTo(actual.getHistorials()));
    }
}
