package com.veterinary.sistema.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class HistorialAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHistorialAllPropertiesEquals(Historial expected, Historial actual) {
        assertHistorialAutoGeneratedPropertiesEquals(expected, actual);
        assertHistorialAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHistorialAllUpdatablePropertiesEquals(Historial expected, Historial actual) {
        assertHistorialUpdatableFieldsEquals(expected, actual);
        assertHistorialUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHistorialAutoGeneratedPropertiesEquals(Historial expected, Historial actual) {
        assertThat(expected)
            .as("Verify Historial auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHistorialUpdatableFieldsEquals(Historial expected, Historial actual) {
        assertThat(expected)
            .as("Verify Historial relevant properties")
            .satisfies(e -> assertThat(e.getFechaConsulta()).as("check fechaConsulta").isEqualTo(actual.getFechaConsulta()))
            .satisfies(e -> assertThat(e.getDiagnostico()).as("check diagnostico").isEqualTo(actual.getDiagnostico()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHistorialUpdatableRelationshipsEquals(Historial expected, Historial actual) {
        assertThat(expected)
            .as("Verify Historial relationships")
            .satisfies(e -> assertThat(e.getMedicamentos()).as("check medicamentos").isEqualTo(actual.getMedicamentos()))
            .satisfies(e -> assertThat(e.getEnfermedads()).as("check enfermedads").isEqualTo(actual.getEnfermedads()))
            .satisfies(e -> assertThat(e.getVeterinario()).as("check veterinario").isEqualTo(actual.getVeterinario()))
            .satisfies(e -> assertThat(e.getMascota()).as("check mascota").isEqualTo(actual.getMascota()));
    }
}
