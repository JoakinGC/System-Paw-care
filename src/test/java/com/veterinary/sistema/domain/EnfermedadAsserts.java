package com.veterinary.sistema.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EnfermedadAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnfermedadAllPropertiesEquals(Enfermedad expected, Enfermedad actual) {
        assertEnfermedadAutoGeneratedPropertiesEquals(expected, actual);
        assertEnfermedadAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnfermedadAllUpdatablePropertiesEquals(Enfermedad expected, Enfermedad actual) {
        assertEnfermedadUpdatableFieldsEquals(expected, actual);
        assertEnfermedadUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnfermedadAutoGeneratedPropertiesEquals(Enfermedad expected, Enfermedad actual) {
        assertThat(expected)
            .as("Verify Enfermedad auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnfermedadUpdatableFieldsEquals(Enfermedad expected, Enfermedad actual) {
        assertThat(expected)
            .as("Verify Enfermedad relevant properties")
            .satisfies(e -> assertThat(e.getNombre()).as("check nombre").isEqualTo(actual.getNombre()))
            .satisfies(e -> assertThat(e.getDescripcion()).as("check descripcion").isEqualTo(actual.getDescripcion()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnfermedadUpdatableRelationshipsEquals(Enfermedad expected, Enfermedad actual) {
        assertThat(expected)
            .as("Verify Enfermedad relationships")
            .satisfies(e -> assertThat(e.getRazas()).as("check razas").isEqualTo(actual.getRazas()))
            .satisfies(e -> assertThat(e.getEspecies()).as("check especies").isEqualTo(actual.getEspecies()))
            .satisfies(e -> assertThat(e.getTerapias()).as("check terapias").isEqualTo(actual.getTerapias()))
            .satisfies(e -> assertThat(e.getFactores()).as("check factores").isEqualTo(actual.getFactores()))
            .satisfies(e -> assertThat(e.getHistorials()).as("check historials").isEqualTo(actual.getHistorials()));
    }
}
