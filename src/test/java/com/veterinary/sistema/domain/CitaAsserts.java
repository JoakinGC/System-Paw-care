package com.veterinary.sistema.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CitaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCitaAllPropertiesEquals(Cita expected, Cita actual) {
        assertCitaAutoGeneratedPropertiesEquals(expected, actual);
        assertCitaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCitaAllUpdatablePropertiesEquals(Cita expected, Cita actual) {
        assertCitaUpdatableFieldsEquals(expected, actual);
        assertCitaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCitaAutoGeneratedPropertiesEquals(Cita expected, Cita actual) {
        assertThat(expected)
            .as("Verify Cita auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCitaUpdatableFieldsEquals(Cita expected, Cita actual) {
        assertThat(expected)
            .as("Verify Cita relevant properties")
            .satisfies(e -> assertThat(e.getHora()).as("check hora").isEqualTo(actual.getHora()))
            .satisfies(e -> assertThat(e.getFecha()).as("check fecha").isEqualTo(actual.getFecha()))
            .satisfies(e -> assertThat(e.getMotivo()).as("check motivo").isEqualTo(actual.getMotivo()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCitaUpdatableRelationshipsEquals(Cita expected, Cita actual) {
        assertThat(expected)
            .as("Verify Cita relationships")
            .satisfies(e -> assertThat(e.getEstetica()).as("check estetica").isEqualTo(actual.getEstetica()))
            .satisfies(e -> assertThat(e.getCuidadoraHotel()).as("check cuidadoraHotel").isEqualTo(actual.getCuidadoraHotel()))
            .satisfies(e -> assertThat(e.getVeterinario()).as("check veterinario").isEqualTo(actual.getVeterinario()))
            .satisfies(e -> assertThat(e.getMascotas()).as("check mascotas").isEqualTo(actual.getMascotas()));
    }
}
