package com.veterinary.sistema.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CuidadoraHotelAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCuidadoraHotelAllPropertiesEquals(CuidadoraHotel expected, CuidadoraHotel actual) {
        assertCuidadoraHotelAutoGeneratedPropertiesEquals(expected, actual);
        assertCuidadoraHotelAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCuidadoraHotelAllUpdatablePropertiesEquals(CuidadoraHotel expected, CuidadoraHotel actual) {
        assertCuidadoraHotelUpdatableFieldsEquals(expected, actual);
        assertCuidadoraHotelUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCuidadoraHotelAutoGeneratedPropertiesEquals(CuidadoraHotel expected, CuidadoraHotel actual) {
        assertThat(expected)
            .as("Verify CuidadoraHotel auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCuidadoraHotelUpdatableFieldsEquals(CuidadoraHotel expected, CuidadoraHotel actual) {
        assertThat(expected)
            .as("Verify CuidadoraHotel relevant properties")
            .satisfies(e -> assertThat(e.getNombre()).as("check nombre").isEqualTo(actual.getNombre()))
            .satisfies(e -> assertThat(e.getDireccion()).as("check direccion").isEqualTo(actual.getDireccion()))
            .satisfies(e -> assertThat(e.getTelefono()).as("check telefono").isEqualTo(actual.getTelefono()))
            .satisfies(e -> assertThat(e.getServicioOfrecido()).as("check servicioOfrecido").isEqualTo(actual.getServicioOfrecido()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCuidadoraHotelUpdatableRelationshipsEquals(CuidadoraHotel expected, CuidadoraHotel actual) {}
}
