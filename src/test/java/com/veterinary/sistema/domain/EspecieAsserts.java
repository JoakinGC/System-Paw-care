package com.veterinary.sistema.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EspecieAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEspecieAllPropertiesEquals(Especie expected, Especie actual) {
        assertEspecieAutoGeneratedPropertiesEquals(expected, actual);
        assertEspecieAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEspecieAllUpdatablePropertiesEquals(Especie expected, Especie actual) {
        assertEspecieUpdatableFieldsEquals(expected, actual);
        assertEspecieUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEspecieAutoGeneratedPropertiesEquals(Especie expected, Especie actual) {
        assertThat(expected)
            .as("Verify Especie auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEspecieUpdatableFieldsEquals(Especie expected, Especie actual) {
        assertThat(expected)
            .as("Verify Especie relevant properties")
            .satisfies(e -> assertThat(e.getNombre()).as("check nombre").isEqualTo(actual.getNombre()))
            .satisfies(e -> assertThat(e.getNombreCientifico()).as("check nombreCientifico").isEqualTo(actual.getNombreCientifico()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEspecieUpdatableRelationshipsEquals(Especie expected, Especie actual) {
        assertThat(expected)
            .as("Verify Especie relationships")
            .satisfies(e -> assertThat(e.getEnfermedads()).as("check enfermedads").isEqualTo(actual.getEnfermedads()));
    }
}
